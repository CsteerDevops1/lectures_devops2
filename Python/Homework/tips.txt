hw3: обратите внимание на сложность алгоритма и на читабельность кода. Алгоритм должен быть прозрачным и понятным из кода.
hw4: в коде должна ясно прослеживаться обработка отрицательных чисел.
hw5: проверьте себя последовательностью 1 2 3.
hw6: код должен быть максимально прозрачным и понятным.
hw7: файлы с пользователями и группами добавьте в репозиторий, чтобы можно было запускать прямо из вашей папки.
hw8: рекурсивно.
hw9: нужны однострочники.
hw10: добавьте свои примеры.
hw12: проверьте для 5432, возвращать надо элемент последовательности.
hw13: функция должны быть максимально удобной в использовании.
hw14: нужен отчет по работе.
hw15: docstrings, комментарии, демонстрации и прочий код необходим для проверки качетсва класса.
hw16: файлы с координатами подложите сами, чтобы можно было сразу запускать.
hw17: jpg-файлы с координатами подложите сами, чтобы можно было сразу запускать.
hw18: jpg-файлы подложите сами, чтобы можно было сразу запускать.
hw19: нужен отчет по работе.
hw20,22: присылайте скрин или сертификат о прохождении.
hw21: Решение вида yield from sorted(list(iter1)+list(iter2)) - не принимается.
